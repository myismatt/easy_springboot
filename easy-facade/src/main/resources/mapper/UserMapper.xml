<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.easy.facade.dao.UserMapper">
    <resultMap id="BaseResultMap" type="com.easy.facade.beans.model.User">
        <!--@mbg.generated-->
        <!--@Table easy_user-->
        <id column="id" jdbcType="BIGINT" property="id"/>
        <result column="user_key" jdbcType="VARCHAR" property="userKey"/>
        <result column="username" jdbcType="VARCHAR" property="username"/>
        <result column="phone" jdbcType="VARCHAR" property="phone"/>
        <result column="email" jdbcType="VARCHAR" property="email"/>
        <result column="password" jdbcType="VARCHAR" property="password"/>
        <result column="register_time" jdbcType="TIMESTAMP" property="registerTime"/>
        <result column="account_status" jdbcType="INTEGER" property="accountStatus"/>
        <result column="create_time" jdbcType="TIMESTAMP" property="createTime"/>
        <result column="update_time" jdbcType="TIMESTAMP" property="updateTime"/>
        <result column="remark" jdbcType="VARCHAR" property="remark"/>
    </resultMap>

    <resultMap id="UserInfoVO" type="com.easy.facade.beans.vo.UserInfoVO">
        <!--@mbg.generated-->
        <!--@Table easy_user-->
        <id column="id" jdbcType="BIGINT" property="id"/>
        <result column="userKey" property="userKey"/>
        <result column="username" property="username"/>
        <result column="phone" property="phone"/>
        <result column="email" property="email"/>
        <result column="password" property="password"/>
        <result column="registerTime" property="registerTime"/>
        <result column="accountStatus" property="accountStatus"/>
        <result column="remark" property="remark"/>
        <result column="nickname" property="nickname"/>
        <collection property="roleList" javaType="java.util.List" resultMap="RoleInfoVO"/>
    </resultMap>

    <resultMap id="RoleInfoVO" type="com.easy.facade.beans.vo.RoleInfoVO">
        <id column="roleId" property="id"/>
        <result column="roleName" property="roleName"/>
        <result column="roleKey" property="roleKey"/>
        <result column="roleSort" property="roleSort"/>
        <result column="enable" property="enable"/>
    </resultMap>

    <sql id="Base_Column_List">
        <!--@mbg.generated-->
        id,
        user_key,
        username,
        phone,
        email,
        `password`,
        register_time,
        account_status,
        create_time,
        update_time,
        remark
    </sql>

    <select id="loadUserByUsername" resultMap="UserInfoVO">
        SELECT u.id AS id,
        u.user_key AS userKey,
        u.username AS username,
        u.phone AS phone,
        u.email AS email,
        u.`password` AS `password`,
        u.register_time AS registerTime,
        u.account_status AS accountStatus,
        ui.nickname AS nickname,
        u.remark AS remark,
        r.id AS roleId,
        r.role_key AS roleKey,
        r.role_name AS roleName,
        r.role_sort AS roleSort,
        r.`enable` AS `enable`
        FROM easy_user u
        left join easy_user_info ui on u.id = ui.user_id
        LEFT JOIN easy_user_role ur ON u.id = ur.user_id
        LEFT JOIN easy_role r ON r.id = ur.role_id
        WHERE username = #{username}
    </select>

    <select id="checkUserKey" resultType="java.lang.String">
        SELECT user_key
        FROM easy_user
        WHERE user_key IN
        <foreach collection="userKeyList" item="userKey" open="(" separator="," close=")">
            #{userKey}
        </foreach>
    </select>

    <select id="selectMenuByUserId" resultType="java.lang.String">
        select distinct m.perms
        from easy_menu m
        left join easy_role_menu rm on m.id = rm.menu_id
        left join easy_user_role ur on rm.role_id = ur.role_id
        left join easy_role r on r.id = ur.role_id
        where m.enable = '1'
        and r.enable = '1'
        and ur.user_id = #{userId}
    </select>
</mapper>
